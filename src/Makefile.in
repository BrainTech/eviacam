# Makefile.in generated by automake 1.10.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = eviacam$(EXEEXT) eviacamloader$(EXEEXT)
subdir = src
DIST_COMMON = $(dist_noinst_DATA) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/eviacam.desktop.in $(srcdir)/version.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = version.h eviacam.desktop
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(desktopdir)" \
	"$(DESTDIR)$(pixmapdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_eviacam_OBJECTS = eviacam-activationkey.$(OBJEXT) \
	eviacam-cautostart.$(OBJEXT) eviacam-clickwindow.$(OBJEXT) \
	eviacam-clickwindowbitmap.$(OBJEXT) \
	eviacam-clickwindowcontroller.$(OBJEXT) \
	eviacam-clickwindowtext.$(OBJEXT) eviacam-guiapp.$(OBJEXT) \
	eviacam-keyboardbitmapcheck.$(OBJEXT) \
	eviacam-motiontracker.$(OBJEXT) eviacam-mouseoutput.$(OBJEXT) \
	eviacam-viacamcontroller.$(OBJEXT) eviacam-wabout.$(OBJEXT) \
	eviacam-wconfiguration.$(OBJEXT) eviacam-wviacam.$(OBJEXT)
eviacam_OBJECTS = $(am_eviacam_OBJECTS)
eviacam_DEPENDENCIES = $(top_builddir)/wxutil/libwxutil.la \
	$(top_builddir)/creavision/libcreavision.la \
	$(top_builddir)/wxcamwindow/libwxcamwindow.la
eviacam_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(eviacam_LDFLAGS) $(LDFLAGS) -o $@
am_eviacamloader_OBJECTS = eviacamloader.$(OBJEXT)
eviacamloader_OBJECTS = $(am_eviacamloader_OBJECTS)
eviacamloader_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(eviacam_SOURCES) $(eviacamloader_SOURCES)
DIST_SOURCES = $(eviacam_SOURCES) $(eviacamloader_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
desktopDATA_INSTALL = $(INSTALL_DATA)
pixmapDATA_INSTALL = $(INSTALL_DATA)
DATA = $(desktop_DATA) $(dist_noinst_DATA) $(pixmap_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
GTK_LIBS = @GTK_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENCV_LIBS = @OPENCV_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POSUB = @POSUB@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WX_LIBS = @WX_LIBS@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# these are the headers for your project
noinst_HEADERS = activationkey.h cautostart.h clickwindow.h clickwindowbitmap.h \
	clickwindowcontroller.h clickwindowtext.h guiapp.h keyboardbitmapcheck.h langnames-utf8.h \
	motiontracker.h mouseoutput.h version.h viacamcontroller.h wabout.h wconfiguration.h \
	wviacam.h

dist_noinst_DATA = version.h.in langnames-utf16.h gui.pjd gui.rc eviacam.vcproj \
	icons/on.xpm icons/eviacam.ico  icons/eviacam_mini.ico  \
	icons/clickwindowoff.xpm  icons/help.xpm icons/preferences.xpm \
	icons/clickwindow.xpm icons/keyboard.xpm icons/user.xpm \
	icons/eviacam_mini.xpm icons/off.xpm \
	icons/buttonDblLeftDisabled.xpm icons/buttonDblLeftLocked.xpm \
	icons/buttonDblLeftSelectedLocked.xpm icons/buttonDblLeftSelected.xpm \
	icons/buttonDblLeft.xpm icons/buttonDragDisabled.xpm icons/buttonDragLocked.xpm \
	icons/buttonDragSelectedLocked.xpm icons/buttonDragSelected.xpm icons/buttonDrag.xpm \
	icons/buttonHideMainWindow.xpm icons/buttonLeftDisabled.xpm icons/buttonLeftLocked.xpm \
	icons/buttonLeftSelectedLocked.xpm icons/buttonLeftSelected.xpm icons/buttonLeft.xpm \
	icons/buttonNoClickSelected.xpm icons/buttonNoClick.xpm \
	icons/buttonRightDisabled.xpm icons/buttonRightLocked.xpm icons/buttonRightSelectedLocked.xpm \
	icons/buttonRightSelected.xpm icons/buttonRight.xpm icons/buttonShowMainWindow.xpm

EXTRA_DIST = eviacam.desktop icons/eviacam.xpm
desktopdir = $(datadir)/applications/
desktop_DATA = eviacam.desktop
pixmapdir = $(datadir)/pixmaps/
pixmap_DATA = icons/eviacam.xpm
eviacamloader_SOURCES = eviacamloader.c

# the application source, library search path, and link libraries
eviacam_SOURCES = activationkey.cpp cautostart.cpp clickwindow.cpp \
	clickwindowbitmap.cpp clickwindowcontroller.cpp clickwindowtext.cpp guiapp.cpp \
	keyboardbitmapcheck.cpp motiontracker.cpp mouseoutput.cpp viacamcontroller.cpp wabout.cpp \
	wconfiguration.cpp wviacam.cpp

eviacam_CPPFLAGS = -DLOCALEDIR=\"$(localedir)\"
eviacam_LDFLAGS = $(WX_LIBS) $(OPENCV_LIBS) -lXtst -lXext -lX11
INCLUDES = -I$(top_srcdir)/creavision \
	-I$(top_srcdir)/wxcamwindow -I$(top_srcdir)/wxutil

eviacam_LDADD = $(top_builddir)/wxutil/libwxutil.la \
		$(top_builddir)/creavision/libcreavision.la \
		$(top_builddir)/wxcamwindow/libwxcamwindow.la

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
version.h: $(top_builddir)/config.status $(srcdir)/version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
eviacam.desktop: $(top_builddir)/config.status $(srcdir)/eviacam.desktop.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
eviacam$(EXEEXT): $(eviacam_OBJECTS) $(eviacam_DEPENDENCIES) 
	@rm -f eviacam$(EXEEXT)
	$(eviacam_LINK) $(eviacam_OBJECTS) $(eviacam_LDADD) $(LIBS)
eviacamloader$(EXEEXT): $(eviacamloader_OBJECTS) $(eviacamloader_DEPENDENCIES) 
	@rm -f eviacamloader$(EXEEXT)
	$(LINK) $(eviacamloader_OBJECTS) $(eviacamloader_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-activationkey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-cautostart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-clickwindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-clickwindowbitmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-clickwindowcontroller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-clickwindowtext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-guiapp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-keyboardbitmapcheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-motiontracker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-mouseoutput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-viacamcontroller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-wabout.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-wconfiguration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacam-wviacam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eviacamloader.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

eviacam-activationkey.o: activationkey.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-activationkey.o -MD -MP -MF $(DEPDIR)/eviacam-activationkey.Tpo -c -o eviacam-activationkey.o `test -f 'activationkey.cpp' || echo '$(srcdir)/'`activationkey.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-activationkey.Tpo $(DEPDIR)/eviacam-activationkey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='activationkey.cpp' object='eviacam-activationkey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-activationkey.o `test -f 'activationkey.cpp' || echo '$(srcdir)/'`activationkey.cpp

eviacam-activationkey.obj: activationkey.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-activationkey.obj -MD -MP -MF $(DEPDIR)/eviacam-activationkey.Tpo -c -o eviacam-activationkey.obj `if test -f 'activationkey.cpp'; then $(CYGPATH_W) 'activationkey.cpp'; else $(CYGPATH_W) '$(srcdir)/activationkey.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-activationkey.Tpo $(DEPDIR)/eviacam-activationkey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='activationkey.cpp' object='eviacam-activationkey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-activationkey.obj `if test -f 'activationkey.cpp'; then $(CYGPATH_W) 'activationkey.cpp'; else $(CYGPATH_W) '$(srcdir)/activationkey.cpp'; fi`

eviacam-cautostart.o: cautostart.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-cautostart.o -MD -MP -MF $(DEPDIR)/eviacam-cautostart.Tpo -c -o eviacam-cautostart.o `test -f 'cautostart.cpp' || echo '$(srcdir)/'`cautostart.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-cautostart.Tpo $(DEPDIR)/eviacam-cautostart.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cautostart.cpp' object='eviacam-cautostart.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-cautostart.o `test -f 'cautostart.cpp' || echo '$(srcdir)/'`cautostart.cpp

eviacam-cautostart.obj: cautostart.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-cautostart.obj -MD -MP -MF $(DEPDIR)/eviacam-cautostart.Tpo -c -o eviacam-cautostart.obj `if test -f 'cautostart.cpp'; then $(CYGPATH_W) 'cautostart.cpp'; else $(CYGPATH_W) '$(srcdir)/cautostart.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-cautostart.Tpo $(DEPDIR)/eviacam-cautostart.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cautostart.cpp' object='eviacam-cautostart.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-cautostart.obj `if test -f 'cautostart.cpp'; then $(CYGPATH_W) 'cautostart.cpp'; else $(CYGPATH_W) '$(srcdir)/cautostart.cpp'; fi`

eviacam-clickwindow.o: clickwindow.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-clickwindow.o -MD -MP -MF $(DEPDIR)/eviacam-clickwindow.Tpo -c -o eviacam-clickwindow.o `test -f 'clickwindow.cpp' || echo '$(srcdir)/'`clickwindow.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-clickwindow.Tpo $(DEPDIR)/eviacam-clickwindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clickwindow.cpp' object='eviacam-clickwindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-clickwindow.o `test -f 'clickwindow.cpp' || echo '$(srcdir)/'`clickwindow.cpp

eviacam-clickwindow.obj: clickwindow.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-clickwindow.obj -MD -MP -MF $(DEPDIR)/eviacam-clickwindow.Tpo -c -o eviacam-clickwindow.obj `if test -f 'clickwindow.cpp'; then $(CYGPATH_W) 'clickwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/clickwindow.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-clickwindow.Tpo $(DEPDIR)/eviacam-clickwindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clickwindow.cpp' object='eviacam-clickwindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-clickwindow.obj `if test -f 'clickwindow.cpp'; then $(CYGPATH_W) 'clickwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/clickwindow.cpp'; fi`

eviacam-clickwindowbitmap.o: clickwindowbitmap.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-clickwindowbitmap.o -MD -MP -MF $(DEPDIR)/eviacam-clickwindowbitmap.Tpo -c -o eviacam-clickwindowbitmap.o `test -f 'clickwindowbitmap.cpp' || echo '$(srcdir)/'`clickwindowbitmap.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-clickwindowbitmap.Tpo $(DEPDIR)/eviacam-clickwindowbitmap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clickwindowbitmap.cpp' object='eviacam-clickwindowbitmap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-clickwindowbitmap.o `test -f 'clickwindowbitmap.cpp' || echo '$(srcdir)/'`clickwindowbitmap.cpp

eviacam-clickwindowbitmap.obj: clickwindowbitmap.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-clickwindowbitmap.obj -MD -MP -MF $(DEPDIR)/eviacam-clickwindowbitmap.Tpo -c -o eviacam-clickwindowbitmap.obj `if test -f 'clickwindowbitmap.cpp'; then $(CYGPATH_W) 'clickwindowbitmap.cpp'; else $(CYGPATH_W) '$(srcdir)/clickwindowbitmap.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-clickwindowbitmap.Tpo $(DEPDIR)/eviacam-clickwindowbitmap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clickwindowbitmap.cpp' object='eviacam-clickwindowbitmap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-clickwindowbitmap.obj `if test -f 'clickwindowbitmap.cpp'; then $(CYGPATH_W) 'clickwindowbitmap.cpp'; else $(CYGPATH_W) '$(srcdir)/clickwindowbitmap.cpp'; fi`

eviacam-clickwindowcontroller.o: clickwindowcontroller.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-clickwindowcontroller.o -MD -MP -MF $(DEPDIR)/eviacam-clickwindowcontroller.Tpo -c -o eviacam-clickwindowcontroller.o `test -f 'clickwindowcontroller.cpp' || echo '$(srcdir)/'`clickwindowcontroller.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-clickwindowcontroller.Tpo $(DEPDIR)/eviacam-clickwindowcontroller.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clickwindowcontroller.cpp' object='eviacam-clickwindowcontroller.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-clickwindowcontroller.o `test -f 'clickwindowcontroller.cpp' || echo '$(srcdir)/'`clickwindowcontroller.cpp

eviacam-clickwindowcontroller.obj: clickwindowcontroller.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-clickwindowcontroller.obj -MD -MP -MF $(DEPDIR)/eviacam-clickwindowcontroller.Tpo -c -o eviacam-clickwindowcontroller.obj `if test -f 'clickwindowcontroller.cpp'; then $(CYGPATH_W) 'clickwindowcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/clickwindowcontroller.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-clickwindowcontroller.Tpo $(DEPDIR)/eviacam-clickwindowcontroller.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clickwindowcontroller.cpp' object='eviacam-clickwindowcontroller.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-clickwindowcontroller.obj `if test -f 'clickwindowcontroller.cpp'; then $(CYGPATH_W) 'clickwindowcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/clickwindowcontroller.cpp'; fi`

eviacam-clickwindowtext.o: clickwindowtext.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-clickwindowtext.o -MD -MP -MF $(DEPDIR)/eviacam-clickwindowtext.Tpo -c -o eviacam-clickwindowtext.o `test -f 'clickwindowtext.cpp' || echo '$(srcdir)/'`clickwindowtext.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-clickwindowtext.Tpo $(DEPDIR)/eviacam-clickwindowtext.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clickwindowtext.cpp' object='eviacam-clickwindowtext.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-clickwindowtext.o `test -f 'clickwindowtext.cpp' || echo '$(srcdir)/'`clickwindowtext.cpp

eviacam-clickwindowtext.obj: clickwindowtext.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-clickwindowtext.obj -MD -MP -MF $(DEPDIR)/eviacam-clickwindowtext.Tpo -c -o eviacam-clickwindowtext.obj `if test -f 'clickwindowtext.cpp'; then $(CYGPATH_W) 'clickwindowtext.cpp'; else $(CYGPATH_W) '$(srcdir)/clickwindowtext.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-clickwindowtext.Tpo $(DEPDIR)/eviacam-clickwindowtext.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='clickwindowtext.cpp' object='eviacam-clickwindowtext.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-clickwindowtext.obj `if test -f 'clickwindowtext.cpp'; then $(CYGPATH_W) 'clickwindowtext.cpp'; else $(CYGPATH_W) '$(srcdir)/clickwindowtext.cpp'; fi`

eviacam-guiapp.o: guiapp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-guiapp.o -MD -MP -MF $(DEPDIR)/eviacam-guiapp.Tpo -c -o eviacam-guiapp.o `test -f 'guiapp.cpp' || echo '$(srcdir)/'`guiapp.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-guiapp.Tpo $(DEPDIR)/eviacam-guiapp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='guiapp.cpp' object='eviacam-guiapp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-guiapp.o `test -f 'guiapp.cpp' || echo '$(srcdir)/'`guiapp.cpp

eviacam-guiapp.obj: guiapp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-guiapp.obj -MD -MP -MF $(DEPDIR)/eviacam-guiapp.Tpo -c -o eviacam-guiapp.obj `if test -f 'guiapp.cpp'; then $(CYGPATH_W) 'guiapp.cpp'; else $(CYGPATH_W) '$(srcdir)/guiapp.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-guiapp.Tpo $(DEPDIR)/eviacam-guiapp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='guiapp.cpp' object='eviacam-guiapp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-guiapp.obj `if test -f 'guiapp.cpp'; then $(CYGPATH_W) 'guiapp.cpp'; else $(CYGPATH_W) '$(srcdir)/guiapp.cpp'; fi`

eviacam-keyboardbitmapcheck.o: keyboardbitmapcheck.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-keyboardbitmapcheck.o -MD -MP -MF $(DEPDIR)/eviacam-keyboardbitmapcheck.Tpo -c -o eviacam-keyboardbitmapcheck.o `test -f 'keyboardbitmapcheck.cpp' || echo '$(srcdir)/'`keyboardbitmapcheck.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-keyboardbitmapcheck.Tpo $(DEPDIR)/eviacam-keyboardbitmapcheck.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='keyboardbitmapcheck.cpp' object='eviacam-keyboardbitmapcheck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-keyboardbitmapcheck.o `test -f 'keyboardbitmapcheck.cpp' || echo '$(srcdir)/'`keyboardbitmapcheck.cpp

eviacam-keyboardbitmapcheck.obj: keyboardbitmapcheck.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-keyboardbitmapcheck.obj -MD -MP -MF $(DEPDIR)/eviacam-keyboardbitmapcheck.Tpo -c -o eviacam-keyboardbitmapcheck.obj `if test -f 'keyboardbitmapcheck.cpp'; then $(CYGPATH_W) 'keyboardbitmapcheck.cpp'; else $(CYGPATH_W) '$(srcdir)/keyboardbitmapcheck.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-keyboardbitmapcheck.Tpo $(DEPDIR)/eviacam-keyboardbitmapcheck.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='keyboardbitmapcheck.cpp' object='eviacam-keyboardbitmapcheck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-keyboardbitmapcheck.obj `if test -f 'keyboardbitmapcheck.cpp'; then $(CYGPATH_W) 'keyboardbitmapcheck.cpp'; else $(CYGPATH_W) '$(srcdir)/keyboardbitmapcheck.cpp'; fi`

eviacam-motiontracker.o: motiontracker.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-motiontracker.o -MD -MP -MF $(DEPDIR)/eviacam-motiontracker.Tpo -c -o eviacam-motiontracker.o `test -f 'motiontracker.cpp' || echo '$(srcdir)/'`motiontracker.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-motiontracker.Tpo $(DEPDIR)/eviacam-motiontracker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='motiontracker.cpp' object='eviacam-motiontracker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-motiontracker.o `test -f 'motiontracker.cpp' || echo '$(srcdir)/'`motiontracker.cpp

eviacam-motiontracker.obj: motiontracker.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-motiontracker.obj -MD -MP -MF $(DEPDIR)/eviacam-motiontracker.Tpo -c -o eviacam-motiontracker.obj `if test -f 'motiontracker.cpp'; then $(CYGPATH_W) 'motiontracker.cpp'; else $(CYGPATH_W) '$(srcdir)/motiontracker.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-motiontracker.Tpo $(DEPDIR)/eviacam-motiontracker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='motiontracker.cpp' object='eviacam-motiontracker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-motiontracker.obj `if test -f 'motiontracker.cpp'; then $(CYGPATH_W) 'motiontracker.cpp'; else $(CYGPATH_W) '$(srcdir)/motiontracker.cpp'; fi`

eviacam-mouseoutput.o: mouseoutput.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-mouseoutput.o -MD -MP -MF $(DEPDIR)/eviacam-mouseoutput.Tpo -c -o eviacam-mouseoutput.o `test -f 'mouseoutput.cpp' || echo '$(srcdir)/'`mouseoutput.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-mouseoutput.Tpo $(DEPDIR)/eviacam-mouseoutput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mouseoutput.cpp' object='eviacam-mouseoutput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-mouseoutput.o `test -f 'mouseoutput.cpp' || echo '$(srcdir)/'`mouseoutput.cpp

eviacam-mouseoutput.obj: mouseoutput.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-mouseoutput.obj -MD -MP -MF $(DEPDIR)/eviacam-mouseoutput.Tpo -c -o eviacam-mouseoutput.obj `if test -f 'mouseoutput.cpp'; then $(CYGPATH_W) 'mouseoutput.cpp'; else $(CYGPATH_W) '$(srcdir)/mouseoutput.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-mouseoutput.Tpo $(DEPDIR)/eviacam-mouseoutput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mouseoutput.cpp' object='eviacam-mouseoutput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-mouseoutput.obj `if test -f 'mouseoutput.cpp'; then $(CYGPATH_W) 'mouseoutput.cpp'; else $(CYGPATH_W) '$(srcdir)/mouseoutput.cpp'; fi`

eviacam-viacamcontroller.o: viacamcontroller.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-viacamcontroller.o -MD -MP -MF $(DEPDIR)/eviacam-viacamcontroller.Tpo -c -o eviacam-viacamcontroller.o `test -f 'viacamcontroller.cpp' || echo '$(srcdir)/'`viacamcontroller.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-viacamcontroller.Tpo $(DEPDIR)/eviacam-viacamcontroller.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='viacamcontroller.cpp' object='eviacam-viacamcontroller.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-viacamcontroller.o `test -f 'viacamcontroller.cpp' || echo '$(srcdir)/'`viacamcontroller.cpp

eviacam-viacamcontroller.obj: viacamcontroller.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-viacamcontroller.obj -MD -MP -MF $(DEPDIR)/eviacam-viacamcontroller.Tpo -c -o eviacam-viacamcontroller.obj `if test -f 'viacamcontroller.cpp'; then $(CYGPATH_W) 'viacamcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/viacamcontroller.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-viacamcontroller.Tpo $(DEPDIR)/eviacam-viacamcontroller.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='viacamcontroller.cpp' object='eviacam-viacamcontroller.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-viacamcontroller.obj `if test -f 'viacamcontroller.cpp'; then $(CYGPATH_W) 'viacamcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/viacamcontroller.cpp'; fi`

eviacam-wabout.o: wabout.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-wabout.o -MD -MP -MF $(DEPDIR)/eviacam-wabout.Tpo -c -o eviacam-wabout.o `test -f 'wabout.cpp' || echo '$(srcdir)/'`wabout.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-wabout.Tpo $(DEPDIR)/eviacam-wabout.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wabout.cpp' object='eviacam-wabout.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-wabout.o `test -f 'wabout.cpp' || echo '$(srcdir)/'`wabout.cpp

eviacam-wabout.obj: wabout.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-wabout.obj -MD -MP -MF $(DEPDIR)/eviacam-wabout.Tpo -c -o eviacam-wabout.obj `if test -f 'wabout.cpp'; then $(CYGPATH_W) 'wabout.cpp'; else $(CYGPATH_W) '$(srcdir)/wabout.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-wabout.Tpo $(DEPDIR)/eviacam-wabout.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wabout.cpp' object='eviacam-wabout.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-wabout.obj `if test -f 'wabout.cpp'; then $(CYGPATH_W) 'wabout.cpp'; else $(CYGPATH_W) '$(srcdir)/wabout.cpp'; fi`

eviacam-wconfiguration.o: wconfiguration.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-wconfiguration.o -MD -MP -MF $(DEPDIR)/eviacam-wconfiguration.Tpo -c -o eviacam-wconfiguration.o `test -f 'wconfiguration.cpp' || echo '$(srcdir)/'`wconfiguration.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-wconfiguration.Tpo $(DEPDIR)/eviacam-wconfiguration.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wconfiguration.cpp' object='eviacam-wconfiguration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-wconfiguration.o `test -f 'wconfiguration.cpp' || echo '$(srcdir)/'`wconfiguration.cpp

eviacam-wconfiguration.obj: wconfiguration.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-wconfiguration.obj -MD -MP -MF $(DEPDIR)/eviacam-wconfiguration.Tpo -c -o eviacam-wconfiguration.obj `if test -f 'wconfiguration.cpp'; then $(CYGPATH_W) 'wconfiguration.cpp'; else $(CYGPATH_W) '$(srcdir)/wconfiguration.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-wconfiguration.Tpo $(DEPDIR)/eviacam-wconfiguration.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wconfiguration.cpp' object='eviacam-wconfiguration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-wconfiguration.obj `if test -f 'wconfiguration.cpp'; then $(CYGPATH_W) 'wconfiguration.cpp'; else $(CYGPATH_W) '$(srcdir)/wconfiguration.cpp'; fi`

eviacam-wviacam.o: wviacam.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-wviacam.o -MD -MP -MF $(DEPDIR)/eviacam-wviacam.Tpo -c -o eviacam-wviacam.o `test -f 'wviacam.cpp' || echo '$(srcdir)/'`wviacam.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-wviacam.Tpo $(DEPDIR)/eviacam-wviacam.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wviacam.cpp' object='eviacam-wviacam.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-wviacam.o `test -f 'wviacam.cpp' || echo '$(srcdir)/'`wviacam.cpp

eviacam-wviacam.obj: wviacam.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eviacam-wviacam.obj -MD -MP -MF $(DEPDIR)/eviacam-wviacam.Tpo -c -o eviacam-wviacam.obj `if test -f 'wviacam.cpp'; then $(CYGPATH_W) 'wviacam.cpp'; else $(CYGPATH_W) '$(srcdir)/wviacam.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eviacam-wviacam.Tpo $(DEPDIR)/eviacam-wviacam.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='wviacam.cpp' object='eviacam-wviacam.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eviacam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eviacam-wviacam.obj `if test -f 'wviacam.cpp'; then $(CYGPATH_W) 'wviacam.cpp'; else $(CYGPATH_W) '$(srcdir)/wviacam.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-desktopDATA: $(desktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(desktopdir)" || $(MKDIR_P) "$(DESTDIR)$(desktopdir)"
	@list='$(desktop_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(desktopDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(desktopdir)/$$f'"; \
	  $(desktopDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(desktopdir)/$$f"; \
	done

uninstall-desktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(desktop_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(desktopdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(desktopdir)/$$f"; \
	done
install-pixmapDATA: $(pixmap_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pixmapdir)" || $(MKDIR_P) "$(DESTDIR)$(pixmapdir)"
	@list='$(pixmap_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pixmapDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pixmapdir)/$$f'"; \
	  $(pixmapDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pixmapdir)/$$f"; \
	done

uninstall-pixmapDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pixmap_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pixmapdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pixmapdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(desktopdir)" "$(DESTDIR)$(pixmapdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-desktopDATA install-pixmapDATA

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-desktopDATA \
	uninstall-pixmapDATA

.MAKE: install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-desktopDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-pixmapDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-desktopDATA \
	uninstall-pixmapDATA

install-exec-hook:
	chmod u+s $(DESTDIR)$(bindir)/eviacamloader
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
